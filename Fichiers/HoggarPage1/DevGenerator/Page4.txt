<template>
    <div class="min-[800px]:flex w-full">
      <Sidebarre/>
        <div class="min-h-[100vh] w-full max-w-[1150px]  overflow-x-auto  bg-[#D5D5D5] p-[3px]">
          <Navbarre/>
          <div class="text-center h-[60px] pt-[10px] bg-[#DFDFDF] text-[darkblue] font-bold text-[28px]">
          CREATE  ROUTER 
        </div>





        <div class="p-[10px] pt-[60px]">
            
            <div class="bg-[#DFDFDF] p-[10px] pt-[5px] max-w-[400px] m-auto"> 
                
                <div class="text-center">
                    <span class="text-[20px]">Create Routes:</span>
                </div>

                <form @submit.prevent="submit">
    
                    <div v-for="(item, index) in props.listModels" :key="index">
                         <input type="checkbox" :value="item" v-model="form.selected" />
                          {{ item }}
                    </div>
        
                    

                    <div class="pt-[15px] text-center">
                    <button type="submit"
                    class="bg-[blue] text-[24px] w-[150px] text-white p-[7px] rounded-[3px]">
                        GENERATE</button>
                </div>

                </form>
  
            </div>
        </div>
  


        </div>
    </div>
  </template>
  
  <script setup>
  import Sidebarre from '@/HoggarLibs/Sidebarre.vue';
  import Navbarre from '@/HoggarLibs/Navbarre.vue'
  import { useForm } from '@inertiajs/vue3'
  import { HoggarInfo } from '@/HoggarLibs/stores/hoggarinfo';
  import { router } from '@inertiajs/vue3'


  const props = defineProps({
    routes: {
    type: Object,
    required: true
  }, 
  user: {
    type: Object,
    required: true
  },
    listModels: {
    type: Object,
    required: true
  },
});

const hoggarinfo = HoggarInfo();
hoggarinfo.setRoutes(props.routes)


const form = useForm({
  selected: []  // array to hold selected values
})

const notyf = new Notyf({ position: { x: 'right', y: 'top' } });

function submit() {
  form.post('/admin/route-generator/creator' , {
     preserveScroll: true,
     preserveState: true,
     onSuccess: () => {
      hoggarinfo.setRoutes(props.routes)
      notyf.success('Record deleted');
      router.get('/admin/route-generator')
    }
  } ) // your backend route
}


  </script>
  
  <style lang="css" scoped>
  
  </style>